// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebChat.Persistence.ContextData;

#nullable disable

namespace WebChat.Presistance.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20240519212948_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebChat.Domain.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.FriendRequest", b =>
                {
                    b.Property<int>("FrindRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FrindRequestId"));

                    b.Property<int>("FriendShipId")
                        .HasColumnType("int");

                    b.HasKey("FrindRequestId");

                    b.HasIndex("FriendShipId");

                    b.ToTable("FriendRequest");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.FriendShip", b =>
                {
                    b.Property<int>("FriendshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FriendshipId"));

                    b.Property<string>("FriendId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("RequestFriendConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FriendshipId");

                    b.HasIndex("FriendId");

                    b.HasIndex("UserId");

                    b.ToTable("FriendShip");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("CreatedGroupBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("groupimgurl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.GroupMessages", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteByReciver")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleteBySender")
                        .HasColumnType("int");

                    b.Property<DateTime>("MessageTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MessageId");

                    b.HasIndex("GroupId");

                    b.HasIndex("SenderId");

                    b.ToTable("GroupMessages");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.UserGroup", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GroupUserId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GroupUserId");

                    b.HasIndex("GroupUserId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.AppUser", b =>
                {
                    b.HasOne("WebChat.Domain.Entities.AppUser", null)
                        .WithMany("Friends")
                        .HasForeignKey("AppUserId");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.FriendRequest", b =>
                {
                    b.HasOne("WebChat.Domain.Entities.FriendShip", "FriendShip")
                        .WithMany()
                        .HasForeignKey("FriendShipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FriendShip");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.FriendShip", b =>
                {
                    b.HasOne("WebChat.Domain.Entities.AppUser", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebChat.Domain.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("WebChat.Domain.Entities.FriendMessages", "Messages", b1 =>
                        {
                            b1.Property<int>("MessageId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("MessageId"));

                            b1.Property<string>("Content")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("FriendshipId")
                                .HasColumnType("int");

                            b1.Property<int>("IsDeleteByReciver")
                                .HasColumnType("int");

                            b1.Property<int>("IsDeleteBySender")
                                .HasColumnType("int");

                            b1.Property<bool>("IsRead")
                                .HasColumnType("bit");

                            b1.Property<DateTime>("MessageTime")
                                .HasColumnType("datetime2");

                            b1.Property<string>("SenderId")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MessageId");

                            b1.HasIndex("FriendshipId");

                            b1.ToTable("FriendMessages");

                            b1.WithOwner()
                                .HasForeignKey("FriendshipId");
                        });

                    b.Navigation("Friend");

                    b.Navigation("Messages");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.GroupMessages", b =>
                {
                    b.HasOne("WebChat.Domain.Entities.Group", null)
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebChat.Domain.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("WebChat.Domain.Entities.DeletedMessages", "DeletedForUserIds", b1 =>
                        {
                            b1.Property<int>("GroupMessagesMessageId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("UserId")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("GroupMessagesMessageId", "Id");

                            b1.ToTable("DeletedMessages");

                            b1.WithOwner()
                                .HasForeignKey("GroupMessagesMessageId");
                        });

                    b.Navigation("DeletedForUserIds");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.UserGroup", b =>
                {
                    b.HasOne("WebChat.Domain.Entities.Group", "GroupUser")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebChat.Domain.Entities.AppUser", "Users")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupUser");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("Friends");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("WebChat.Domain.Entities.Group", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("UserGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
